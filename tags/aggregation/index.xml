<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aggregation on Rainboy's Blog</title><link>https://hugo-dead-simple.netlify.com/tags/aggregation/</link><description>Recent content in Aggregation on Rainboy's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 06 Sep 2025 15:50:25 +0000</lastBuildDate><atom:link href="https://hugo-dead-simple.netlify.com/tags/aggregation/index.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB - Lookup 操作详解</title><link>https://hugo-dead-simple.netlify.com/mongodb/lookup/</link><pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate><guid>https://hugo-dead-simple.netlify.com/mongodb/lookup/</guid><description>&lt;h2 id="faq"&gt;FAQ&lt;/h2&gt;
&lt;p&gt;如果实现类似的sql的 join 功能呢?&lt;/p&gt;
&lt;p&gt;查看官方文档&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/lookup/" target="_blank" rel="noreferrer nofollow"&gt;$lookup（聚合）— MongoDB 手册 v8.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ask"&gt;ask&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ask : 我在写在mongodb的相关内容, 有一个user collection ,还有一个comment collection,commment通过 userid 与user 进行了关联,,我在查询comment ,如何得到每个comment 里的user 的相关属性?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="answser"&gt;Answser&lt;/h2&gt;
&lt;p&gt;在 MongoDB 中，如果 &lt;code&gt;comment&lt;/code&gt; 集合中的每个文档通过 &lt;code&gt;userId&lt;/code&gt; 字段与 &lt;code&gt;user&lt;/code&gt; 集合中的用户进行关联，并且你希望在查询 &lt;code&gt;comment&lt;/code&gt; 时获取每个评论对应的 &lt;code&gt;user&lt;/code&gt; 的相关属性，你可以使用 &lt;strong&gt;&lt;code&gt;$lookup&lt;/code&gt;&lt;/strong&gt; 聚合操作来实现联表查询。&lt;/p&gt;
&lt;h3 id="示例数据结构"&gt;示例数据结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;user&lt;/strong&gt; 集合:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-json" data-lang="json"&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;1&lt;/span&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;2&lt;/span&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;ObjectId(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;user1&amp;#34;&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;3&lt;/span&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Alice&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;4&lt;/span&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;email&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;alice@example.com&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;5&lt;/span&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;age&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;6&lt;/span&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;comment&lt;/strong&gt; 集合:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-json" data-lang="json"&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;1&lt;/span&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;2&lt;/span&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;ObjectId(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;comment1&amp;#34;&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;3&lt;/span&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;This is a comment&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;4&lt;/span&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;ObjectId(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;user1&amp;#34;&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;5&lt;/span&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;ISODate(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;2024-12-09T10:00:00Z&amp;#34;&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="ln"&gt;6&lt;/span&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="使用-lookup-进行联表查询"&gt;使用 &lt;code&gt;$lookup&lt;/code&gt; 进行联表查询&lt;/h3&gt;
&lt;p&gt;你可以使用聚合框架（&lt;code&gt;aggregate()&lt;/code&gt;）结合 &lt;code&gt;$lookup&lt;/code&gt; 来连接 &lt;code&gt;comment&lt;/code&gt; 和 &lt;code&gt;user&lt;/code&gt; 集合，并将每个评论对应的用户信息合并到评论数据中。&lt;/p&gt;</description></item></channel></rss>